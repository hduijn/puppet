<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator class="hudson.tasks.LogRotator">
    <daysToKeep>3</daysToKeep>
    <numToKeep>10</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.5">
      <projectUrl>https://github.com/ExampleUser/RepoURL/</projectUrl>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>sha1</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@1.3.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name></name>
        <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>git@github.com:ExampleUser/Repo.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>${sha1}</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <disableSubmodules>false</disableSubmodules>
    <recursiveSubmodules>false</recursiveSubmodules>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <authorOrCommitter>false</authorOrCommitter>
    <clean>true</clean>
    <wipeOutWorkspace>false</wipeOutWorkspace>
    <pruneBranches>false</pruneBranches>
    <remotePoll>false</remotePoll>
    <ignoreNotifyCommit>false</ignoreNotifyCommit>
    <useShallowClone>false</useShallowClone>
    <buildChooser class="hudson.plugins.git.util.DefaultBuildChooser"/>
    <gitTool>Default</gitTool>
    <submoduleCfg class="list"/>
    <relativeTargetDir></relativeTargetDir>
    <reference></reference>
    <excludedRegions></excludedRegions>
    <excludedUsers></excludedUsers>
    <gitConfigName></gitConfigName>
    <gitConfigEmail></gitConfigEmail>
    <skipTag>false</skipTag>
    <includedRegions></includedRegions>
    <scmName></scmName>
  </scm>
  <canRoam>true</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector">
    <org.jenkinsci.plugins.ghprb.GhprbTrigger plugin="ghprb@1.7">
      <spec>* * * * *</spec>
      <adminlist>ExampleUser</adminlist>
      <whitelist></whitelist>
      <orgslist></orgslist>
      <cron>* * * * *</cron>
      <useGitHubHooks>false</useGitHubHooks>
      <permitAll>false</permitAll>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>git status 

CHANGED_PP_FILES=&quot;$(git diff master ${GIT_BRANCH} --name-only --diff-filter=ACMRTUXB | grep &apos;\.pp$&apos; || true)&quot;
CHANGED_ERB_FILES=&quot;$(git diff master ${GIT_BRANCH} --name-only --diff-filter=ACMRTUXB | grep &apos;\.erb$&apos; || true)&quot;

echo $CHANGED_PP_FILES
echo $CHANGED_ERB_FILES

git submodule update --init

# DO YOUR THING DOWN HERE
bundle install

for file in $CHANGED_PP_FILES; do
  puppet parser validate --color false --render-as s --modulepath=modules $file || exit 1;
done;


for file in $CHANGED_ERB_FILES; do
  erb -P -x -T &apos;-&apos; $file| ruby -c|| exit 1;
done;

</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/sh -x
CHANGED_PP_FILES=&quot;$(git diff master ${GIT_BRANCH} --name-only --diff-filter=ACMRTUXB | grep &apos;\.pp$&apos; || true)&quot;
echo $CHANGED_PP_FILES

for file in $CHANGED_PP_FILES; do
  puppet-lint --no-double_quoted_strings-check --no-autoloader_layout-check --no-unquoted_resource_title-check --log-format &quot;%{path}:%{linenumber}:%{check}:%{KIND}:%{message}&quot; $file;
done;
exit 0</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.warnings.WarningsPublisher plugin="warnings@4.25">
      <healthy></healthy>
      <unHealthy></unHealthy>
      <thresholdLimit>low</thresholdLimit>
      <pluginName>[WARNINGS] </pluginName>
      <defaultEncoding></defaultEncoding>
      <canRunOnFailed>false</canRunOnFailed>
      <useStableBuildAsReference>false</useStableBuildAsReference>
      <useDeltaValues>false</useDeltaValues>
      <thresholds plugin="analysis-core@1.49">
        <unstableTotalAll></unstableTotalAll>
        <unstableTotalHigh></unstableTotalHigh>
        <unstableTotalNormal></unstableTotalNormal>
        <unstableTotalLow></unstableTotalLow>
        <failedTotalAll></failedTotalAll>
        <failedTotalHigh></failedTotalHigh>
        <failedTotalNormal></failedTotalNormal>
        <failedTotalLow></failedTotalLow>
      </thresholds>
      <shouldDetectModules>false</shouldDetectModules>
      <dontComputeNew>true</dontComputeNew>
      <doNotResolveRelativePaths>true</doNotResolveRelativePaths>
      <parserConfigurations/>
      <consoleParsers>
        <hudson.plugins.warnings.ConsoleParser>
          <parserName>Puppet-Lint</parserName>
        </hudson.plugins.warnings.ConsoleParser>
      </consoleParsers>
    </hudson.plugins.warnings.WarningsPublisher>
  </publishers>
  <buildWrappers>
    <ruby-proxy-object>
      <ruby-object ruby-class="Jenkins::Plugin::Proxies::BuildWrapper" pluginid="rvm">
        <object ruby-class="RvmWrapper" pluginid="rvm">
          <impl pluginid="rvm" ruby-class="String">1.9.3</impl>
        </object>
        <pluginid pluginid="rvm" ruby-class="String">rvm</pluginid>
      </ruby-object>
    </ruby-proxy-object>
  </buildWrappers>
</project>